{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dataFactoryName": {
            "type": "string",
            "defaultValue": "[concat('datafactory', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Data Factory Name"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of the data factory. Currently, only East US, East US 2, and West Europe are supported."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of the Azure storage account that contains the input/output data."
            }
        },
        "blobContainerName": {
            "type": "string",
            "defaultValue": "[concat('blob', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of the blob container in the Azure Storage account."
            }
        },
        "roleNameGuid": {
            "type": "string",
            // "defaultValue": "[newGuid()]",
            "defaultValue": "[guid(resourceGroup().id)]",
            "metadata": {
                "description": "A new GUID used to identify the role assignment"
            }
        },
        "databricksWorkspaceName": {
            "defaultValue": "[concat('databricks', uniqueString(resourceGroup().id))]",
            "type": "String"
        },
        "appConfigurationName": {
            "type": "string",
            "defaultValue": "[concat('appconfig', uniqueString(resourceGroup().id))]"
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[concat('keyvault', uniqueString(resourceGroup().id))]"
        }
    },
    "variables": {
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "storageAccountContributorRoleId": "/subscriptions/337ba254-3aa0-4551-ba8e-89debefaa373/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
        "managedResourceGroupName": "[concat('databricks-rg-', parameters('databricksWorkspaceName'), '-', uniqueString(parameters('databricksWorkspaceName'), resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories/', parameters('dataFactoryName'))]"
            ],
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "[concat('default/', parameters('blobContainerName'))]",
                    "dependsOn": [
                        "[parameters('storageAccountName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[parameters('dataFactoryName')]",
            "location": "[parameters('location')]",
            "properties": {},
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "[concat(parameters('dataFactoryName'), '/AzureDatabricks')]",
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "annotations": [],
                        "type": "AzureDatabricks",
                        "typeProperties": {
                            "domain": "[concat('https://',reference(resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName'))).workspaceUrl)]",
                            "authentication": "MSI",
                            "workspaceResourceId": "[resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName'))]",
                            "newClusterNodeType": "Standard_DS3_v2",
                            "newClusterNumOfWorker": "1",
                            "newClusterVersion": "8.2.x-cpu-ml-scala2.12",
                            "newClusterInitScripts": []
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]",
                        "[resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[parameters('roleNameGuid')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('storageAccountContributorRoleId')]",
                "principalId": "[reference(resourceId('Microsoft.DataFactory/factories/', parameters('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Databricks/workspaces",
            "apiVersion": "2018-04-01",
            "name": "[parameters('databricksWorkspaceName')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
            ],
            "sku": {
                "name": "trial"
            },
            "properties": {

                "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('managedResourceGroupName'))]"
            }
        },
        {
            "type": "Microsoft.AppConfiguration/configurationStores",
            "apiVersion": "2020-07-01-preview",
            "name": "[parameters('appConfigurationName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "standard"
            },
            "resources": [
                {
                    "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
                    "apiVersion": "2020-07-01-preview",
                    "name": "[concat(parameters('appConfigurationName'), '/databricksWorkspaceURL')]",
                    "dependsOn": [
                        "[parameters('appConfigurationName')]"
                    ],
                    "properties": {
                        "value": "[concat('https://',reference(resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName'))).workspaceUrl)]",
                        "contentType": "string"
                    }
                },
                {
                    "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
                    "apiVersion": "2020-07-01-preview",
                    "name": "[concat(parameters('appConfigurationName'), '/databricksResourceId')]",
                    "dependsOn": [
                        "[parameters('appConfigurationName')]"
                    ],
                    "properties": {
                        "value": "[resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName'))]",
                        "contentType": "string"
                    }
                }

                // {
                //     "type": "keyValues",
                //     "apiVersion": "2020-07-01-preview",
                //     "name": "[parameters('keyValueName')]",
                //     "dependsOn": [
                //         "[parameters('configStoreName')]"
                //     ],
                //     "properties": {
                //         "value": "[string(variables('keyVaultRef'))]",
                //         "contentType": "application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8"
                //     }
                // }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
             "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories/', parameters('dataFactoryName'))]"
            ],
            "properties": {
                // "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "tenantId": "[tenantResourceId('Microsoft.DataFactory/factories/', parameters('dataFactoryName'))]",
                "accessPolicies": [
                    {
                        "objectId": "[reference(resourceId('Microsoft.DataFactory/factories/', parameters('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]",
                        "tenantId": "[tenantResourceId('Microsoft.DataFactory/factories/', parameters('dataFactoryName'))]",
                        "permissions": {
                            "secrets": ["list","get"]
                        }
                    }
                ],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        }
    ]
}
